<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeploymentWorker_Starting" xml:space="preserve">
    <value>Starting utility to deploy an Iot Core app based on source ...</value>
  </data>
  <data name="DeploymentWorker_FoundBaseProjectType" xml:space="preserve">
    <value>... base project system found: {0}</value>
  </data>
  <data name="DeploymentWorker_NoBaseProjectType" xml:space="preserve">
    <value>Error: base project type is not supported. {0}</value>
  </data>
  <data name="DeploymentWorker_FoundProjectForSource" xml:space="preserve">
    <value>... project system found: {0}</value>
  </data>
  <data name="DeploymentWorker_NoProjectForSource" xml:space="preserve">
    <value>Error: source is not supported. {0}</value>
  </data>
  <data name="DeploymentWorker_PowershellNotFound1" xml:space="preserve">
    <value>Error: PowerShell.exe cannot be found.  Please use -powershell to provide</value>
  </data>
  <data name="DeploymentWorker_PowershellNotFound2" xml:space="preserve">
    <value>       the location.</value>
  </data>
  <data name="DeploymentWorker_DeviceNotFound" xml:space="preserve">
    <value>... device specified ({0}) cannot be resolved: {1}</value>
  </data>
  <data name="DeploymentWorker_TargetMissing" xml:space="preserve">
    <value>... device must be specified.</value>
  </data>
  <data name="DeploymentWorker_GetTargetFromUser" xml:space="preserve">
    <value>Enter target name or ip address: </value>
  </data>
  <data name="DeploymentWorker_GetTargetFromUserTitle" xml:space="preserve">
    <value>Get Target</value>
  </data>
  <data name="DeploymentWorker_DeployFailed" xml:space="preserve">
    <value>... deployment {0} failed.</value>
  </data>
  <data name="DeploymentWorker_DeployFinished" xml:space="preserve">
    <value>... deployment {0} finished.</value>
  </data>
  <data name="DeploymentWorker_PreviousDeployNotUninstalled" xml:space="preserve">
    <value>... previous installation {0} was not uninstalled (if it wasn't previously installed, this is expected)</value>
  </data>
  <data name="DeploymentWorker_PreviousDeployUninstalled" xml:space="preserve">
    <value>... previously deployed {0} uninstalled successfully</value>
  </data>
  <data name="DeploymentWorker_DeployAppx_starting_to_deploy_certificate_APPX_and_dependencies" xml:space="preserve">
    <value>... starting to deploy certificate, APPX, and dependencies</value>
  </data>
  <data name="DeploymentWorker_StartDeploy" xml:space="preserve">
    <value>... deploying to target {0}</value>
  </data>
  <data name="DeploymentWorker_FailedToSaveAppx" xml:space="preserve">
    <value>Failed to copy dependency to {0}</value>
  </data>
  <data name="DeploymentWorker_FailedToCopy0to1" xml:space="preserve">
    <value>Failed to copy {0} to {1}</value>
  </data>
  <data name="DeploymentWorker_CopiedDependencyAppxFiles" xml:space="preserve">
    <value>... dependencies copied into place</value>
  </data>
  <data name="DeploymentWorker_CreatedLogfile" xml:space="preserve">
    <value>        logfile: {0}</value>
  </data>
  <data name="DeploymentWorker_CreatedCertFromPfx" xml:space="preserve">
    <value>... CER file generated from PFX</value>
  </data>
  <data name="DeploymentWorker_AppxSignedWithPfx" xml:space="preserve">
    <value>... APPX file signed with PFX</value>
  </data>
  <data name="DeploymentWorker_AppxCreated" xml:space="preserve">
    <value>... APPX file created</value>
  </data>
  <data name="DeploymentWorker_AppxMapCreated" xml:space="preserve">
    <value>... APPX map file created: {0}</value>
  </data>
  <data name="DeploymentWorker_FailedToGetProjectContents" xml:space="preserve">
    <value>Failed to get the project appx map contents.</value>
  </data>
  <data name="DeploymentWorker_FailedToGetTemplateContents" xml:space="preserve">
    <value>Failed to get the template appx map contents.</value>
  </data>
  <data name="DeploymentWorker_FailedToAddCapability" xml:space="preserve">
    <value>Failed to add all capabilities to AppxManifest.xml.</value>
  </data>
  <data name="DeploymentWorker_BuildSucceeded" xml:space="preserve">
    <value>... build succeeded</value>
  </data>
  <data name="DeploymentWorker_BuildFailed" xml:space="preserve">
    <value>... build failed</value>
  </data>
  <data name="DeploymentWorker_BuildStarted" xml:space="preserve">
    <value>... build started</value>
  </data>
  <data name="DeploymentWorker_ChangedAppxManifest" xml:space="preserve">
    <value>... project files tailored to current deployment.</value>
  </data>
  <data name="DeploymentWorker_FailedToChangeAppxManifest" xml:space="preserve">
    <value>Failed to make all changes to AppxManifest.xml.</value>
  </data>
  <data name="DeploymentWorker_CopiedFromResourcesMsg" xml:space="preserve">
    <value>... project files found and copied: {0}</value>
  </data>
  <data name="DeploymentWorker_FailedToCopyFromResourcesMsg" xml:space="preserve">
    <value>Failed to get {0} from resources.</value>
  </data>
  <data name="DeploymentWorker_CopiedBaseFromResourcesMsg" xml:space="preserve">
    <value>... base project files found and copied: {0}</value>
  </data>
  <data name="DeploymentWorker_ToolNotFound5" xml:space="preserve">
    <value>       and -signtool.</value>
  </data>
  <data name="DeploymentWorker_ToolNotFound4" xml:space="preserve">
    <value>       present on your machine, please provide the paths using -makeappx </value>
  </data>
  <data name="DeploymentWorker_ToolNotFound3" xml:space="preserve">
    <value>       (https://go.microsoft.com/fwlink/?LinkID=698771).  If they are </value>
  </data>
  <data name="DeploymentWorker_ToolNotFound2" xml:space="preserve">
    <value>       are installed as part of the Windows Standalone SDK for Windows 10 </value>
  </data>
  <data name="DeploymentWorker_ToolNotFound1" xml:space="preserve">
    <value>Error: MakeAppx.exe and SignTool.exe must be installed.  These tools </value>
  </data>
  <data name="DeploymentWorker_SourceArgMsg" xml:space="preserve">
    <value>Specify source input</value>
  </data>
  <data name="DeploymentWorker_TargetArgMsg" xml:space="preserve">
    <value>Speficy IoT Core device name or IP address</value>
  </data>
  <data name="DeploymentWorker_SdkArgMsg" xml:space="preserve">
    <value>Specify SDK version ... {0} is default</value>
  </data>
  <data name="DeploymentWorker_TempDirArgMsg" xml:space="preserve">
    <value>Specify the temp working directory ... if not specified, %temp% will be used</value>
  </data>
  <data name="DeploymentWorker_ArchArgMsg" xml:space="preserve">
    <value>Specify the target architecture [ARM|X86] ... ARM is default</value>
  </data>
  <data name="DeploymentWorker_TargetUserNameArgMsg" xml:space="preserve">
    <value>Specify target username ... {0} is default</value>
  </data>
  <data name="DeploymentWorker_ConfigArgMsg" xml:space="preserve">
    <value>Specify the configuration [Debug|Release] ... Debug is default</value>
  </data>
  <data name="DeploymentWorker_TargetPasswordArgMsg" xml:space="preserve">
    <value>Specify target user password) ... {0} is default</value>
  </data>
  <data name="DeploymentWorker_SaveAppxArgMsg" xml:space="preserve">
    <value>Specify local path to save APPX in ... if not provided, files will not be saved</value>
  </data>
  <data name="DeploymentWorker_MakeAppxArgMsg" xml:space="preserve">
    <value>Specify MakeAppx.exe full path ... if not provided, registry is queried</value>
  </data>
  <data name="DeploymentWorker_SignToolArgMsg" xml:space="preserve">
    <value>Specify SignTool.exe full path ... if not provided, registry is queried</value>
  </data>
  <data name="DeploymentWorker_PowershellArgMsg" xml:space="preserve">
    <value>Specify PowerShell.exe full path ... if not provided, registry is queried</value>
  </data>
  <data name="DeploymentWorker_KeepTempArgMsg" xml:space="preserve">
    <value>If this is specified, the temp folder will not be deleted</value>
  </data>
  <data name="DeploymentWorker_HelpArgMsg" xml:space="preserve">
    <value>Display usage message</value>
  </data>
  <data name="CommandLineParser_ArgRequiresInput" xml:space="preserve">
    <value>Argument ({0}) requires input.</value>
  </data>
  <data name="DeploymentWorker_argumentHelper_0_is_not_a_supported_target_architecture" xml:space="preserve">
    <value>{0} is not a supported target architecture</value>
  </data>
  <data name="DeploymentWorker_argumentHelper_0_is_not_a_supported_configuration" xml:space="preserve">
    <value>{0} is not a supported configuration</value>
  </data>
  <data name="DeploymentWorker_SupportedSdksErrorMsg" xml:space="preserve">
    <value>Error: suported dependency sdks are: {0}</value>
  </data>
  <data name="CommandLineParser_UnrecognizedArgument" xml:space="preserve">
    <value>Argument ({0}) was not recognized.  See usage:</value>
  </data>
  <data name="CommandLineParser_RequiredArgWithInput" xml:space="preserve">
    <value>   Required arguments requiring input: -arg value</value>
  </data>
  <data name="CommandLineParser_OptionalArgWithInput" xml:space="preserve">
    <value>   Optional arguments requiring input: -arg value</value>
  </data>
  <data name="CommandLineParser_OptionalArgNoInput" xml:space="preserve">
    <value>   Optional arguments requiring no input: -arg </value>
  </data>
  <data name="DeploymentWorker_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DeploymentWorker_Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="DeploymentWorker_CustomPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="DeploymentWorker_CustomUsername" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="DeploymentWorker_EnterCustomCredentials" xml:space="preserve">
    <value>Enter Custom Credentials</value>
  </data>
  <data name="DeploymentWorker_UnauthorizedDeployment" xml:space="preserve">
    <value>... deployment request unauthorized using these credentials: {0} {1}</value>
  </data>
</root>